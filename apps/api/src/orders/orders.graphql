scalar Date

enum OrderStatus {
  SELECT_DONE
  ORDER_DONE
  ORDER_CANCEL
  COOK_DONE
  DELIVERY_DONE
  PAYMENT_DONE
  UNKNOWN_ERROR
}

type Order {
  id: ID!
  storeId: ID
  menuId: ID!
  userId: ID
  description: String
  isInCart: Boolean!
  isPaid: Boolean!
  status: OrderStatus
  createdAt: Date
  updatedAt: Date
  menu: Menu
}

type Query {
  orders: [Order]
  ordersByStore(storeId: ID!): [Order]
  ordersByUser(userId: ID!): [Order]
  ordersByStatus(status: OrderStatus!): [Order]
  order(id: ID!): Order
}

type Mutation {
  orderCreate(orderCreateInput: OrderCreateInput!): Order
  orderUpdate(orderUpdateInput: OrderUpdateInput!): Order
  orderDelete(id: ID!): Order
  orderStatusBulkUpdate(orderStatusBulkUpdateInput: OrderStatusBulkUpdateInput!): [Order]
}

input OrderCreateInput {
  storeId: ID
  menuId: ID!
  userId: ID
  description: String
  isInCart: Boolean!
  isPaid: Boolean!
}

input OrderUpdateInput {
  id: ID!
  storeId: ID
  menuId: ID
  userId: ID
  description: String
  isInCart: Boolean
  isPaid: Boolean
  status: OrderStatus
}

input OrderStatusBulkUpdateInput {
  ids: [ID!]!
  status: OrderStatus!
}
