import React, { useState } from 'react'
import type { NextPage, GetStaticProps } from 'next'
import Head from 'next/head'
import Link from 'next/link'

import {
  Toolbar,
  Box,
  Grid,
  Typography,
  Card,
  CardContent,
  CardMedia,
  CardActionArea,
} from '@mui/material'

import Appbar from '../components/Appbar'
import OrderDrawer from '../components/OrderDrawer'

import { initializeApollo, addApolloState } from '../lib/apolloClient'
import { useQuery } from '@apollo/client'
import { Store } from '../common/types'
import { STORES_AVAILABLE_QUERY } from '../query/StoresAvailableQuery'

const Home: NextPage = () => {
  const [mobileOpen, setMobileOpen] = useState(false)

  const { loading, error, data } = useQuery(STORES_AVAILABLE_QUERY)
  const { storesAvailable } = data || {}

  const handleDrawerToggle = () => {
    setMobileOpen(!mobileOpen)
  }

  return (
    <Box sx={{ display: 'flex' }}>
      <Head>
        <title>Namhae Life App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Appbar
        title="Namhae Life 식사배달"
        handleDrawerToggle={handleDrawerToggle}
      />

      <Box component="main" sx={{ flexGrow: 1, p: 3 }}>
        <Toolbar />
        <Grid
          container
          spacing={{ xs: 2, sm: 3 }}
          columns={{ xs: 4, sm: 8, md: 12 }}
        >
          {storesAvailable?.map((store: Store, index: number) => (
            <Grid key={index} item xs={4} sm={4} md={4}>
              <StoreCard
                id={store.id}
                name={store.name}
                imageUrl={store.imageUrl ? store.imageUrl : '/vercel.svg'}
                description={store.description}
              />
            </Grid>
          ))}
        </Grid>
      </Box>

      <OrderDrawer
        mobileOpen={mobileOpen}
        handleDrawerToggle={handleDrawerToggle}
      />
    </Box>
  )
}

export default Home

interface StoreCardProps {
  id: string
  name: string
  imageUrl: string
  description: string
}

const StoreCard: NextPage<StoreCardProps> = (store) => {
  const { id, name, imageUrl, description } = store

  return (
    <Link href={`/store/${id}`} passHref>
      <Card>
        <CardActionArea>
          <CardMedia component="img" height="140" image={imageUrl} alt={name} />
          <CardContent>
            <Typography gutterBottom variant="h5" component="div">
              {name}
            </Typography>
            <Typography variant="body2" color="text.secondary">
              {description}
            </Typography>
          </CardContent>
        </CardActionArea>
      </Card>
    </Link>
  )
}

export const getStaticProps: GetStaticProps = async () => {
  const apolloClient = initializeApollo()

  const { data } = await apolloClient.query({
    query: STORES_AVAILABLE_QUERY,
  })

  const { storesAvailable } = data || {}

  return addApolloState(apolloClient, {
    props: { storesAvailable },
    revalidate: 10,
  })
}
